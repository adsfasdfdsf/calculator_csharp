using System;
using System.Collections.Generic;

namespace CalculatorApp
{
    public static class Calculator
    {
        public static double Calculate(string input)
        {
            /*
             –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É-–≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
            */
            var tokens = Tokenize(input);
            var postfix = ToPostfix(tokens);
            var result = EvalPostfix(postfix);
            return result;
        }

        public static List<string> Tokenize(string expression)
        {
            /*
             –†–∞–∑–±–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ —Ç–æ–∫–µ–Ω—ã (—á–∏—Å–ª–∞, –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã, —Å–∫–æ–±–∫–∏).
             –ü—Ä–∏–º–µ—Ä: "2 + 5 * ( 3 - 7 )"
             -> ["2", "+", "5", "*", "(", "3", "-", "7", ")"]
            */
            throw new NotImplementedException("implement me");
        }

        public static List<string> ToPostfix(List<string> tokens)
        {
            /*
             –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≤ –ø–æ—Å—Ç—Ñ–∏–∫—Å–Ω—É—é —Ñ–æ—Ä–º—É (–æ–±—Ä–∞—Ç–Ω–∞—è –ø–æ–ª—å—Å–∫–∞—è –∑–∞–ø–∏—Å—å).

             –ó–¥–µ—Å—å –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –î–í–ê "—Å—Ç–µ–∫–∞":
               1. output = []   // –≤—ã—Ö–æ–¥–Ω–æ–π —Å–ø–∏—Å–æ–∫
               2. stack = []    // —Å—Ç–µ–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –∏ —Å–∫–æ–±–æ–∫

             üîπ –ü—Ä–∏–º–µ—Ä—ã:
             ["2", "+", "3"]                -> ["2", "3", "+"]
             ["2", "+", "3", "*", "4"]      -> ["2", "3", "4", "*", "+"]
             ["(", "2", "+", "3", ")", "*", "4"] -> ["2", "3", "+", "4", "*"]
             ["2", "+", "5", "*", "(", "3", "-", "7", ")"] -> ["2", "5", "3", "7", "-", "*", "+"]
            */
            var output = new List<string>();
            var stack = new Stack<string>();
            throw new NotImplementedException("implement me");
        }

        public static double EvalPostfix(List<string> postfixTokens)
        {
            /*
             –°—á–∏—Ç–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–æ—Å—Ç—Ñ–∏–∫—Å–Ω–æ–π –∑–∞–ø–∏—Å–∏.
             –ó–¥–µ—Å—å –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –û–î–ò–ù —Å—Ç–µ–∫ —á–∏—Å–µ–ª.

             üîπ –ü—Ä–∏–º–µ—Ä—ã:

             ["2", "3", "+"] -> 5
             ["2", "3", "5", "*", "+"] -> 17
             ["10", "2", "-", "3", "+"] -> 11
             ["2", "3", "+", "4", "1", "-", "*"] -> 15
            */
            var stack = new Stack<double>();

            throw new NotImplementedException("implement me");
        }
    }
}
